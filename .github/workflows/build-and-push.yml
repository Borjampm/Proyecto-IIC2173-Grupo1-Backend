name: Build and Push to ECR


on:
    push:
        branches:
            - main
            - fix-CD

permissions:
    id-token: write
    contents: read

jobs:
    build-and-push:
        runs-on: ubuntu-latest
        steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            role-to-assume: arn:aws:iam::866733551467:role/iic2173-github-actions-ecr-workflow
            aws-region: us-east-1

        - name: Login to Amazon ECR Public
          id: login-ecr-public
          uses: aws-actions/amazon-ecr-login@v2
          with:
            registry-type: public

        - name: Build, tag, and push API to Amazon ECR Public
          env:
            REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
            REGISTRY_ALIAS: p3t1e0p3
            REPOSITORY: grupo1-api
            IMAGE_TAG: latest
          run: |
            docker build -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG ./API
            docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG

        - name: Build, tag, and push Listener to Amazon ECR Public
          env:
            REGISTRY: ${{ steps.login-ecr-public.outputs.registry }}
            REGISTRY_ALIAS: p3t1e0p3
            REPOSITORY: grupo1-listener
            IMAGE_TAG: latest
          run: |
            docker build -t $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG ./Listener
            docker push $REGISTRY/$REGISTRY_ALIAS/$REPOSITORY:$IMAGE_TAG

    deploy-to-ec2:
      runs-on: ubuntu-latest
      if: ${{ always() }}
      needs: [build-and-push]
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            role-to-assume: arn:aws:iam::866733551467:role/iic2173-github-actions-ecr-workflow
            aws-region: us-east-2

        - name: Zip Artifacts to deploy
          run: zip -r deploy.zip scripts/ appspec.yml docker-compose.production.yml

        - name: Zip Artifacts And upload to S3
          run:
            zip -r deploy.zip scripts/ appspec.yml docker-compose.production.yml |
            aws s3 cp deploy.zip s3://grupo1-codedeploy-bucket/deploy.zip

        - name: Create Codedeploy Deployment
          id: codedeploy-deploy-trigger
          env:
            DEPLOYMENT_APPLICATION_NAME: grupo1-codedeploy
            DEPLOYMENT_GROUP_NAME: grupo1-deployment-group
            DEPLOYMENT_BUCKET_NAME: grupo1-codedeploy-bucket
          # https://stackoverflow.com/questions/66381595/trying-to-parse-json-output-in-a-github-action
          run: |
            deploymentId=$( aws deploy create-deployment \
              --application-name $DEPLOYMENT_APPLICATION_NAME \
              --deployment-group-name $DEPLOYMENT_GROUP_NAME \
              --s3-location bucket=$DEPLOYMENT_BUCKET_NAME,key=deploy.zip,bundleType=zip \
              --description "Automatic deployment from github commit ${{github.sha}}" | jq -r '.deploymentId' )
            echo "deploymentId=$deploymentId" >> $GITHUB_OUTPUT

        - name: Wait until deployment is done
          run: aws deploy wait deployment-successful --deployment-id ${{steps.codedeploy-deploy-trigger.outputs.deploymentId}}
